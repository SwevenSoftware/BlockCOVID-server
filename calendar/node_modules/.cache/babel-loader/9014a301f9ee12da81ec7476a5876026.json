{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\modri\\\\OneDrive\\\\Documenti\\\\GitHub\\\\BlockCOVID-server\\\\calendar\\\\src\\\\Aule.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    //alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  paper: {\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative',\n    width: 100,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n{\n  /*contenuto del modale*/\n}\nexport default function SimpleModal() {\n  _s();\n\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  {\n    /*handleOpen apre popup*/\n  }\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  {\n    /*handleClose chiude popup*/\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"simple-modal-title\",\n      children: \"Text in a modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"simple-modal-description\",\n      children: \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleClose,\n      children: \"Chiudi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this); //numero di colonne\n\n\n  function FormRow() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"P1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleOpen,\n            children: \"Gestisci\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            open: open,\n            onClose: handleClose,\n            \"aria-labelledby\": \"simple-modal-title\",\n            \"aria-describedby\": \"simple-modal-description\",\n            children: body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"P2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleOpen,\n            children: \"Gestisci\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            open: open,\n            onClose: handleClose,\n            \"aria-labelledby\": \"simple-modal-title\",\n            \"aria-describedby\": \"simple-modal-description\",\n            children: body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: [\"P3\", /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            style: {\n              cursor: 'pointer'\n            },\n            children: \"Prenota\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: [\"P4\", /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            style: {\n              cursor: 'pointer'\n            },\n            children: \"Prenota\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: [\"P5\", /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            style: {\n              cursor: 'pointer'\n            },\n            children: \"Prenota\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: [\"P6\", /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            style: {\n              cursor: 'pointer'\n            },\n            children: \"Prenota\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: [\"P7\", /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            style: {\n              cursor: 'pointer'\n            },\n            children: \"Prenota\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: [\"P8\", /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            style: {\n              cursor: 'pointer'\n            },\n            children: \"Prenota\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  } //bottoni aule + numero di righe\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n      color: \"primary\",\n      \"aria-label\": \"outlined primary button group\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        children: \"Aula 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Aula 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Aula 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Aula 4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 10,\n        spacing: 2,\n        children: /*#__PURE__*/_jsxDEV(FormRow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SimpleModal, \"p+PfpQWRJSW5eCi9+wrB37XJE8A=\", false, function () {\n  return [useStyles];\n});\n\n_c = SimpleModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleModal\");","map":{"version":3,"sources":["C:/Users/modri/OneDrive/Documenti/GitHub/BlockCOVID-server/calendar/src/Aule.tsx"],"names":["React","makeStyles","createStyles","Paper","Grid","Button","ButtonGroup","Typography","Modal","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","root","flexGrow","display","flexDirection","margin","spacing","paper","textAlign","color","palette","text","secondary","position","width","backgroundColor","background","border","boxShadow","shadows","padding","SimpleModal","classes","modalStyle","useState","open","setOpen","handleOpen","handleClose","body","FormRow","cursor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            //alignItems: 'center',\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            }\r\n        },\r\n        paper: {\r\n            textAlign: 'center',\r\n            color: theme.palette.text.secondary,\r\n            position: 'relative',\r\n            width: 100,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\n{/*contenuto del modale*/ }\r\nexport default function SimpleModal() {\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    {/*handleOpen apre popup*/ }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    {/*handleClose chiude popup*/}\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\">Text in a modal</h2>\r\n            <p id=\"simple-modal-description\">\r\n                Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n            </p>\r\n            <button type=\"button\" onClick={handleClose}>\r\n                Chiudi\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n    //numero di colonne\r\n    function FormRow() {\r\n        return (\r\n            <React.Fragment>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                        <p>P1</p>\r\n                        <button type=\"button\" onClick={handleOpen}>\r\n                            Gestisci\r\n                        </button>\r\n                        <Modal\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"simple-modal-title\"\r\n                            aria-describedby=\"simple-modal-description\"\r\n                        >\r\n                            {body}\r\n                            </Modal>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                        <p>P2</p>\r\n                        <button type=\"button\" onClick={handleOpen}>\r\n                            Gestisci\r\n                        </button>\r\n                        <Modal\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"simple-modal-title\"\r\n                            aria-describedby=\"simple-modal-description\"\r\n                        >\r\n                            {body}\r\n                        </Modal>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>P3\r\n                        <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                                Prenota\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>P4\r\n                        <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                            Prenota\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>P5\r\n                        <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                            Prenota\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>P6\r\n                        <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                            Prenota\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>P7\r\n                        <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                            Prenota\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>P8\r\n                        <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                            Prenota\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    //bottoni aule + numero di righe\r\n    return (\r\n        <div className={classes.root}>\r\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n                <Button>Aula 1</Button>\r\n                <Button>Aula 2</Button>\r\n                <Button>Aula 3</Button>\r\n                <Button>Aula 4</Button>\r\n            </ButtonGroup>\r\n            <Grid container spacing={1}>\r\n                <Grid container item xs={10} spacing={2}>\r\n                    <FormRow />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}