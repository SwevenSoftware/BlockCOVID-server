[{"C:\\Users\\modri\\OneDrive\\Documenti\\GitHub\\BlockCOVID-server\\calendar\\src\\index.tsx":"1","C:\\Users\\modri\\OneDrive\\Documenti\\GitHub\\BlockCOVID-server\\calendar\\src\\reportWebVitals.ts":"2","C:\\Users\\modri\\OneDrive\\Documenti\\GitHub\\BlockCOVID-server\\calendar\\src\\App.tsx":"3","C:\\Users\\modri\\OneDrive\\Documenti\\GitHub\\BlockCOVID-server\\calendar\\src\\Home.tsx":"4","C:\\Users\\modri\\OneDrive\\Documenti\\GitHub\\BlockCOVID-server\\calendar\\src\\Aule\\Aula1.tsx":"5","C:\\Users\\modri\\OneDrive\\Documenti\\GitHub\\BlockCOVID-server\\calendar\\src\\Aule\\Aula2.tsx":"6","C:\\Users\\modri\\OneDrive\\Documenti\\GitHub\\BlockCOVID-server\\calendar\\src\\Aule\\Aula4.tsx":"7","C:\\Users\\modri\\OneDrive\\Documenti\\GitHub\\BlockCOVID-server\\calendar\\src\\Aule\\Aula3.tsx":"8","C:\\Users\\modri\\OneDrive\\Documenti\\GitHub\\BlockCOVID-server\\calendar\\src\\Modal.component.tsx":"9"},{"size":517,"mtime":1613486444572,"results":"10","hashOfConfig":"11"},{"size":440,"mtime":1613486444573,"results":"12","hashOfConfig":"11"},{"size":833,"mtime":1613688264228,"results":"13","hashOfConfig":"11"},{"size":1404,"mtime":1613838196641,"results":"14","hashOfConfig":"11"},{"size":977,"mtime":1613833871226,"results":"15","hashOfConfig":"11"},{"size":932,"mtime":1613833871188,"results":"16","hashOfConfig":"11"},{"size":932,"mtime":1613753357376,"results":"17","hashOfConfig":"11"},{"size":932,"mtime":1613753357375,"results":"18","hashOfConfig":"11"},{"size":1440,"mtime":1613769029874,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"41lc66",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},"C:\\Users\\modri\\OneDrive\\Documenti\\GitHub\\BlockCOVID-server\\calendar\\src\\index.tsx",[],["40","41"],"C:\\Users\\modri\\OneDrive\\Documenti\\GitHub\\BlockCOVID-server\\calendar\\src\\reportWebVitals.ts",[],"C:\\Users\\modri\\OneDrive\\Documenti\\GitHub\\BlockCOVID-server\\calendar\\src\\App.tsx",[],"C:\\Users\\modri\\OneDrive\\Documenti\\GitHub\\BlockCOVID-server\\calendar\\src\\Home.tsx",["42","43","44","45"],"C:\\Users\\modri\\OneDrive\\Documenti\\GitHub\\BlockCOVID-server\\calendar\\src\\Aule\\Aula1.tsx",[],"C:\\Users\\modri\\OneDrive\\Documenti\\GitHub\\BlockCOVID-server\\calendar\\src\\Aule\\Aula2.tsx",[],"C:\\Users\\modri\\OneDrive\\Documenti\\GitHub\\BlockCOVID-server\\calendar\\src\\Aule\\Aula4.tsx",[],"C:\\Users\\modri\\OneDrive\\Documenti\\GitHub\\BlockCOVID-server\\calendar\\src\\Aule\\Aula3.tsx",[],"C:\\Users\\modri\\OneDrive\\Documenti\\GitHub\\BlockCOVID-server\\calendar\\src\\Modal.component.tsx",["46"],"import React, { MouseEvent } from 'react';\r\nimport './Modal.component.css'\r\nimport iconX from \"../src/Images/x_red.png\"\r\n\r\n\r\ninterface ModalProps {\r\n    title: string;\r\n    isOpen: boolean;\r\n    onClose: () => void;\r\n}\r\n\r\nexport const Modal: React.FC<ModalProps> = ({title, isOpen, onClose, children}) =>  {\r\n    \r\n    const outsideRef = React.useRef(null);\r\n\r\n    const handleCloseOnOverlay = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n        if (e.target === outsideRef.current) {\r\n        onClose();\r\n        }\r\n    }\r\n\r\n    return isOpen ?  (\r\n        <div className={'modal'}>\r\n            <div \r\n                className={'modal__overlay'} \r\n                ref = {outsideRef}\r\n                onClick = {onClose} />                      {/* IL PROBLEMA Ã¨ QUI */}\r\n            <div className={'modal__box'} >\r\n            <button\r\n                className={'modal__close'}\r\n                onClick={onClose}\r\n            >\r\n                <img src={iconX} alt={'close'} className={'iconX'}/>\r\n            </button>\r\n                <div className={'modal__title'}>\r\n                    {title}\r\n                </div>\r\n                <div className={'modal__content'}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n            <button className={'modal__close'}\r\n                onClick={onClose}>\r\n                Strucca chi!!!\r\n            </button>\r\n        </div>\r\n    ) : null;\r\n};",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":4,"column":9,"nodeType":"53","messageId":"54","endLine":4,"endColumn":22},{"ruleId":"51","severity":1,"message":"55","line":4,"column":24,"nodeType":"53","messageId":"54","endLine":4,"endColumn":30},{"ruleId":"51","severity":1,"message":"56","line":4,"column":32,"nodeType":"53","messageId":"54","endLine":4,"endColumn":37},{"ruleId":"51","severity":1,"message":"57","line":4,"column":39,"nodeType":"53","messageId":"54","endLine":4,"endColumn":45},{"ruleId":"51","severity":1,"message":"58","line":16,"column":11,"nodeType":"53","messageId":"54","endLine":16,"endColumn":31},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'handleCloseOnOverlay' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]